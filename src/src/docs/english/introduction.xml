<section>
   <title>Overview</title>
   <section>
      <title>MX4J</title>
      <para>
         MX4J is an open source implementation of the JMX
         <superscript>TM</superscript> technology.
         <sbr/>
         JMX stands for
         <ulink url="http://java.sun.com/jmx">Java
            <superscript>TM</superscript> Management Extensions
         </ulink>,
         and it's an optional package for the J2SE
         <superscript>TM</superscript> platform that is now
         included in J2SE 5.0.
      </para>
      <para>
         The Java Management Extension specification is a Java Specification Request (see
         <ulink url="http://jcp.org/en/jsr/detail?id=003">JSR 003</ulink>) currently in maintenance release 1.2.
         <sbr/>
         A new JSR has been issued to address connectivity to a remote JMX Agent,
         <ulink url="http://jcp.org/en/jsr/detail?id=160">JSR 160</ulink>, which has released version 1.0 on
         October 2003.
      </para>
      <para>
         MX4J implements both JSR 3 and JSR 160.
      </para>
   </section>
   <section>
      <title>What is JMX ?</title>
      <para>
         JMX defines the architecture, the patterns, the API and the services to build manageable Java applications.
         <sbr/>
         But what do this really mean ?
      </para>
   </section>
   <section>
      <title>For what can you use JMX ?</title>
      <para>
         By means of JMX, components of an application have a standard way of exposing some of their functionality
         for management. A JMX Agent enables manageability of these functionalities from local or remote, allowing
         a system administrator to manage the components of the application.
      </para>
      <para>
         Managing a component means having the possibility to stop and restart it, to remove it from the application or
         to add it to an application, to change its configuration files,
         to ask it to do some operation (such as downloading information from an URL the system administrator passes in),
         and so on, depending on the management interface that this component expose.
      </para>
      <para>
         Many application servers such as Tomcat, JBoss, IONA, BEA WebLogic have their architecture based on JMX.
      </para>
      <para>
         Every JMX Agent comes with a set of predefined services, defined by the JMX specification.
         <sbr/>
         A service is a manageable component that can be used by, embedded in or extended by an application.
         <sbr/>
         Every JMX implementation can provide additional services, and normally each additional service can be used or
         deployed in a different JMX implementation without requiring any additional operation, thus achieving
         extreme portability of applications and application components.
      </para>
   </section>
   <section>
      <title>MX4J's JMX implementation</title>
      <para>
         MX4J's implementation of the JMX specification is stable and reliable, passing every night an extended
         <ulink url="/test/index.html">suite of tests</ulink>
         following the
         <ulink url="http://extremeprogramming.org">XP</ulink> principles.
      </para>
      <para>
         The MX4J implementation runs in J2SE version 1.3 or superior.
      </para>
      <para>
         It provides some non-standard but
         useful extension that can be used at wish, or not used if maximum portability is a primary goal.
      </para>
      <para>
         The MX4J implementation provides also useful services and tools, and several examples to guide users
         in the use of JMX to build their applications.
         Some example of tools, extensions and utilities are:
         <itemizedlist>
            <listitem>HTTP adaptor (also over SSL)</listitem>
            <listitem>ConfigurationLoader to read MBean configuration from XML</listitem>
            <listitem>AbstractDynamicMBean to ease DynamicMBean development</listitem>
            <listitem>Utility MBeans for:
               <itemizedlist>
                  <listitem>RMIRegistry</listitem>
                  <listitem>TNameServ</listitem>
                  <listitem>Statistics</listitem>
                  <listitem>EMail</listitem>
                  <listitem>Remote MBean Proxying</listitem>
               </itemizedlist>
            </listitem>
            <listitem>Automatic generation of management interfaces for standard MBean via
               <ulink url="http://xdoclet.sourceforge.net">XDoclet</ulink>
            </listitem>
         </itemizedlist>
      </para>
   </section>
</section>
