<?xml version="1.0" encoding="ISO-8859-1"?>

<!--
 Copyright (C) The MX4J Contributors.
 All rights reserved.

 This software is distributed under the terms of the MX4J License version 1.0.
 See the terms of the MX4J License in the documentation provided with this software.
-->

<project name="MX4J" default="main" basedir="..">

   <property name="name" value="mx4j"/>
   <!-- REMEMBER: change also the this information in:    -->
   <!-- 1. The javax.management.MBeanServerDelegate class -->
   <!-- 2. The mx4j.server.MX4JMBeanServerDelegate class  -->
   <!-- 3. The mx4j.tools.adaptor.http.HttpAdaptor class  -->
   <property name="release" value="3.0.1"/>

   <property name="src.dir" value="${basedir}/src"/>
   <property name="core.src.dir" value="${src.dir}/core"/>
   <property name="test.src.dir" value="${src.dir}/test"/>
   <property name="docs.src.dir" value="${src.dir}/docs"/>
   <property name="tools.src.dir" value="${src.dir}/tools"/>
   <property name="examples.src.dir" value="${src.dir}/examples"/>

   <property name="classes.dir" value="${basedir}/classes"/>
   <property name="core.classes.dir" value="${classes.dir}/core"/>
   <property name="test.classes.dir" value="${classes.dir}/test"/>
   <property name="tools.classes.dir" value="${classes.dir}/tools"/>
   <property name="examples.classes.dir" value="${classes.dir}/examples"/>

   <property name="lib.dir" value="${basedir}/lib"/>

   <property name="etc.dir" value="${src.dir}/etc"/>

   <property name="dist.dir" value="${basedir}/dist"/>
   <property name="dist.lib.dir" value="${dist.dir}/lib"/>
   <property name="dist.test.dir" value="${dist.dir}/test"/>
   <property name="dist.examples.dir" value="${dist.dir}/examples"/>
   <property name="dist.docs.dir" value="${dist.dir}/docs"/>
   <property name="dist.docs.api.dir" value="${dist.docs.dir}/api"/>

   <property name="release.dist.dir" value="${dist.dir}/${name}-${release}"/>
   <property name="binary.release.dist.dir" value="${release.dist.dir}/binary"/>
   <property name="source.release.dist.dir" value="${release.dist.dir}/source"/>

   <property name="test.xml.dir" value="${dist.test.dir}/xml/${java.version}"/>
   <property name="test.html.dir" value="${dist.test.dir}/html/${java.version}"/>

   <property name="jmx.jar.file" value="${dist.lib.dir}/${name}-jmx.jar"/>
   <property name="impl.jar.file" value="${dist.lib.dir}/${name}-impl.jar"/>
   <property name="mx4j.jar.file" value="${dist.lib.dir}/${name}.jar"/>

   <property name="rjmx.jar.file" value="${dist.lib.dir}/${name}-rjmx.jar"/>
   <property name="rimpl.jar.file" value="${dist.lib.dir}/${name}-rimpl.jar"/>
   <property name="rmx4j.jar.file" value="${dist.lib.dir}/${name}-remote.jar"/>

   <property name="tools.jar.file" value="${dist.lib.dir}/${name}-tools.jar"/>

   <property name="tests.jar.file" value="${dist.test.dir}/${name}-tests.jar"/>

   <property name="examples.jar.file" value="${dist.examples.dir}/${name}-examples.jar"/>

   <property name="mx4j.soap.war.file" value="${dist.lib.dir}/${name}-soap.war"/>

   <property name="root.document.name" value="index.xml"/>
   <property name="docbook.dtd.zip.file" value="${lib.dir}/docbook.zip"/>
   <property name="docbook.xsl.zip.file" value="${lib.dir}/docbookx.zip"/>

   <patternset id="jmx.classes">
      <include name="javax/management/**"/>
      <exclude name="javax/management/remote/**"/>
   </patternset>

   <patternset id="impl.classes">
      <include name="mx4j/**"/>
      <exclude name="mx4j/remote/**"/>
   </patternset>

   <patternset id="mx4j.classes">
      <patternset refid="jmx.classes"/>
      <patternset refid="impl.classes"/>
   </patternset>

   <patternset id="rjmx.classes">
      <include name="javax/management/remote/**"/>
      <include name="org/omg/stub/**"/>
   </patternset>

   <patternset id="rimpl.classes">
      <include name="mx4j/remote/**"/>
      <include name="mx4j/log/**"/>
      <include name="mx4j/util/Base64Codec.*"/>
   </patternset>

   <patternset id="rmx4j.classes">
      <patternset refid="rjmx.classes"/>
      <patternset refid="rimpl.classes"/>
   </patternset>

   <patternset id="tools.classes">
      <include name="mx4j/log/**"/>
      <include name="mx4j/util/**"/>
      <include name="mx4j/tools/**"/>
      <include name="mx4j/remote/*.*"/>
   </patternset>

   <patternset id="tools.files">
      <include name="mx4j/tools/adaptor/http/**/*.xsl"/>
      <include name="mx4j/tools/adaptor/http/**/*.xml"/>
      <include name="mx4j/tools/adaptor/http/**/*.css"/>
      <include name="mx4j/tools/adaptor/http/**/*.html"/>
      <include name="mx4j/tools/adaptor/http/**/*.png"/>
      <include name="mx4j/tools/adaptor/http/**/*.gif"/>
      <include name="mx4j/tools/adaptor/http/**/*.jpg"/>
      <include name="mx4j/tools/adaptor/http/**/*.ico"/>
      <include name="mx4j/tools/jython/**/*.py"/>
      <include name="mx4j/tools/remote/**/*.wsdd"/>
   </patternset>

   <patternset id="tests.classes">
      <include name="test/**"/>
   </patternset>

   <path id="lib.classpath">
      <pathelement location="${lib.dir}"/>
      <fileset dir="${lib.dir}" includes="*.jar">
         <exclude name="jmxri.jar"/>
         <exclude name="jmxremote.jar"/>
         <exclude name="jmxremote_optional.jar"/>
      </fileset>
   </path>

   <path id="dist.lib.classpath">
      <fileset dir="${dist.lib.dir}" includes="*.jar"/>
   </path>

   <path id="classpath">
      <path refid="lib.classpath"/>
      <path refid="dist.lib.classpath"/>
   </path>

   <target name="jdk14-present" unless="jdk14.present">
      <echo message="The JDK used is not 1.4, therefore JDK 1.4 specific classes will not be built."/>
   </target>

   <target name="jaas-present" unless="jaas.present">
      <echo message="JAAS clases are not present, therefore the Remote JMX implementation will not be built."/>
      <echo message="You need jaas.jar in the MX4J lib directory."/>
      <echo message="You can download it from http://java.sun.com/products/jaas"/>
   </target>

   <target name="javamail-present" unless="javamail.present">
      <echo message="JavaMail classes are not present, therefore the SMTP MBean will not be built."/>
      <echo message="You need mail.jar and activation.jar in the MX4J lib directory."/>
      <echo message="You can download them from http://java.sun.com/products/javamail"/>
   </target>

   <target name="jython-present" unless="jython.present">
      <echo message="Jython classes are not present, therefore the JythonRunner MBean will not be built."/>
      <echo message="You need jython.jar in the MX4J lib directory"/>
      <echo message="You can download it from http://www.jython.org"/>
   </target>

   <target name="jetty-present" unless="jetty.present">
      <echo message="Jetty classes are not present, therefore the Jetty specific classes will not be built."/>
      <echo message="You need org.mortbay.jetty.jar in the MX4J lib directory"/>
      <echo message="You can download it from http://jetty.mortbay.org"/>
   </target>

   <target name="flags" description="Sets the flags for conditional compilation">
      <!-- JDK 1.4 flag -->
      <condition property="jdk14.present">
         <available classname="java.util.logging.Logger"/>
      </condition>
      <antcall target="jdk14-present"/>

      <!-- JAAS flag -->
      <condition property="jaas.present">
         <available classname="javax.security.auth.Subject" classpathref="lib.classpath"/>
      </condition>
      <antcall target="jaas-present"/>

      <!-- Mail flag -->
      <condition property="javamail.present">
         <and>
            <available classname="javax.mail.Session" classpathref="lib.classpath"/>
            <available classname="javax.activation.DataSource" classpathref="lib.classpath"/>
         </and>
      </condition>
      <antcall target="javamail-present"/>

      <!-- Jython flag -->
      <condition property="jython.present">
         <available classname="org.python.util.PythonInterpreter" classpathref="lib.classpath"/>
      </condition>
      <antcall target="jython-present"/>

      <!-- Jetty flag -->
      <condition property="jetty.present">
         <and>
            <available classname="org.mortbay.jetty.Server" classpathref="lib.classpath"/>
         </and>
      </condition>
      <antcall target="jetty-present"/>
   </target>

   <target name="releasing">
      <property name="releasing" value="true"/>
   </target>

   <target name="manifest">
      <tstamp>
         <format property="now" pattern="EEEE d MMMM yyyy HH:mm z" locale="en"/>
      </tstamp>

      <manifest file="${etc.dir}/MANIFEST.MF">
         <attribute name="MX4J-Release" value="${release}"/>
         <attribute name="MX4J-Release-Date" value="${now}"/>
      </manifest>
   </target>

   <target name="compile.jmx" description="Compiles the JMX (JSR 3) classes" depends="flags">
      <mkdir dir="${core.classes.dir}"/>
      <mkdir dir="${dist.lib.dir}"/>

      <javac srcdir="${core.src.dir}" destdir="${core.classes.dir}" debug="on" deprecation="on" encoding="US-ASCII">
         <patternset refid="mx4j.classes"/>
         <classpath refid="lib.classpath"/>
      </javac>

      <jar jarfile="${jmx.jar.file}" manifest="${etc.dir}/MANIFEST.MF">
         <fileset dir="${core.classes.dir}">
            <patternset refid="jmx.classes"/>
         </fileset>
      </jar>

      <jar jarfile="${impl.jar.file}" manifest="${etc.dir}/MANIFEST.MF">
         <fileset dir="${core.classes.dir}">
            <patternset refid="impl.classes"/>
         </fileset>
      </jar>

      <jar jarfile="${mx4j.jar.file}" manifest="${etc.dir}/MANIFEST.MF">
         <fileset dir="${core.classes.dir}">
            <patternset refid="mx4j.classes"/>
         </fileset>
      </jar>
   </target>

   <target name="rmic.iiop.poa" description="RMI compiles the remote JMX (JSR 160) classes using the -poa option" if="jdk14.present">
      <rmic base="${core.classes.dir}" classname="javax.management.remote.rmi.RMIServerImpl" classpathref="classpath" debug="yes" iiop="yes">
         <compilerarg value="-poa"/>
      </rmic>
      <rmic base="${core.classes.dir}" classname="javax.management.remote.rmi.RMIConnectionImpl" classpathref="classpath" debug="yes" iiop="yes">
         <compilerarg value="-poa"/>
      </rmic>
   </target>

   <target name="rmic.iiop" description="RMI compiles the remote JMX (JSR 160) classes" unless="jdk14.present">
      <rmic base="${core.classes.dir}" classname="javax.management.remote.rmi.RMIServerImpl" classpathref="classpath" debug="yes" iiop="yes"/>
      <rmic base="${core.classes.dir}" classname="javax.management.remote.rmi.RMIConnectionImpl" classpathref="classpath" debug="yes" iiop="yes"/>
   </target>

   <target name="compile.rjmx" description="Compiles the Remote JMX (JSR 160) classes" depends="compile.jmx" if="jaas.present">
      <javac srcdir="${core.src.dir}" destdir="${core.classes.dir}" debug="on" deprecation="on" encoding="US-ASCII">
         <patternset refid="rmx4j.classes"/>
         <classpath refid="lib.classpath"/>
      </javac>
      <rmic base="${core.classes.dir}" classname="javax.management.remote.rmi.RMIServerImpl" classpathref="classpath" debug="yes" stubversion="1.2"/>
      <rmic base="${core.classes.dir}" classname="javax.management.remote.rmi.RMIConnectionImpl" classpathref="classpath" debug="yes" stubversion="1.2"/>
      <antcall target="rmic.iiop"/>
      <antcall target="rmic.iiop.poa"/>

      <jar jarfile="${rjmx.jar.file}" manifest="${etc.dir}/MANIFEST.MF">
         <fileset dir="${core.classes.dir}">
            <patternset refid="rjmx.classes"/>
         </fileset>
      </jar>

      <jar jarfile="${rimpl.jar.file}" manifest="${etc.dir}/MANIFEST.MF">
         <fileset dir="${core.classes.dir}">
            <patternset refid="rimpl.classes"/>
         </fileset>
         <zipfileset file="${etc.dir}/JMXConnectorProvider-core.provider" fullpath="META-INF/services/javax.management.remote.JMXConnectorProvider"/>
         <zipfileset file="${etc.dir}/JMXConnectorServerProvider-core.provider" fullpath="META-INF/services/javax.management.remote.JMXConnectorServerProvider"/>
      </jar>

      <jar jarfile="${rmx4j.jar.file}" manifest="${etc.dir}/MANIFEST.MF">
         <fileset dir="${core.classes.dir}">
            <patternset refid="rmx4j.classes"/>
         </fileset>
         <zipfileset file="${etc.dir}/JMXConnectorProvider-core.provider" fullpath="META-INF/services/javax.management.remote.JMXConnectorProvider"/>
         <zipfileset file="${etc.dir}/JMXConnectorServerProvider-core.provider" fullpath="META-INF/services/javax.management.remote.JMXConnectorServerProvider"/>
      </jar>
   </target>

   <target name="compile.tools" description="Compiles the MX4J tools classes" depends="compile.rjmx">
      <mkdir dir="${tools.classes.dir}"/>

      <javac srcdir="${tools.src.dir}" destdir="${tools.classes.dir}" debug="on" deprecation="on" encoding="US-ASCII">
         <patternset refid="tools.classes"/>
         <exclude name="mx4j/tools/mail/**" unless="javamail.present"/>
         <exclude name="mx4j/tools/jython/**" unless="jython.present"/>
         <exclude name="mx4j/tools/remote/**" unless="jaas.present"/>
         <exclude name="mx4j/tools/remote/rmi/SSL*" unless="jdk14.present"/>
         <exclude name="mx4j/tools/remote/http/jetty/**" unless="jetty.present"/>
         <exclude name="mx4j/tools/remote/caucho/**" unless="jdk14.present"/>
         <exclude name="mx4j/tools/remote/**/hessian/**" unless="jdk14.present"/>
         <exclude name="mx4j/tools/remote/**/burlap/**" unless="jdk14.present"/>
         <classpath>
            <path refid="classpath"/>
            <pathelement location="${core.classes.dir}"/>
         </classpath>
      </javac>

      <jar jarfile="${tools.jar.file}" manifest="${etc.dir}/MANIFEST.MF">
         <fileset dir="${core.classes.dir}">
            <patternset refid="tools.classes"/>
         </fileset>
         <fileset dir="${tools.classes.dir}">
            <patternset refid="tools.classes"/>
         </fileset>
         <fileset dir="${core.src.dir}">
            <patternset refid="tools.files"/>
         </fileset>
         <fileset dir="${tools.src.dir}">
            <patternset refid="tools.files"/>
         </fileset>
         <zipfileset file="${etc.dir}/JMXConnectorProvider-tools.provider" fullpath="META-INF/services/javax.management.remote.JMXConnectorProvider"/>
         <zipfileset file="${etc.dir}/JMXConnectorServerProvider-tools.provider" fullpath="META-INF/services/javax.management.remote.JMXConnectorServerProvider"/>
      </jar>

      <war destfile="${mx4j.soap.war.file}" manifest="${etc.dir}/MANIFEST.MF" webxml="${etc.dir}/web.xml">
         <lib dir="${lib.dir}">
            <include name="axis.jar"/>
            <include name="commons-discovery.jar"/>
            <include name="commons-logging.jar"/>
            <include name="saaj.jar"/>
            <include name="jaxrpc.jar"/>
            <include name="wsdl4j.jar"/>
         </lib>
         <lib dir="${dist.lib.dir}">
            <include name="${name}.jar"/>
            <include name="${name}-rjmx.jar"/>
            <include name="${name}-tools.jar"/>
         </lib>
         <fileset dir="${etc.dir}">
            <include name="index.jsp"/>
         </fileset>
      </war>
   </target>

   <target name="compile.tests" description="Compiles the MX4J test suite" depends="compile.tools">
      <mkdir dir="${test.classes.dir}"/>
      <mkdir dir="${dist.test.dir}"/>

      <javac srcdir="${test.src.dir}" destdir="${test.classes.dir}" debug="on" deprecation="on" encoding="US-ASCII">
         <patternset refid="tests.classes"/>
         <exclude name="test/javax/management/remote/**" unless="jaas.present"/>
         <exclude name="test/mx4j/remote/**" unless="jaas.present"/>
         <exclude name="test/mx4j/tools/remote/**" unless="jaas.present"/>
         <exclude name="test/javax/management/remote/compliance/serialization/support/Optional*"/>
         <exclude name="test/mx4j/tools/jython/**" unless="jython.present"/>
         <exclude name="test/**/*SecurityManager*" unless="jdk14.present"/>
         <exclude name="test/mx4j/tools/remote/soap/**" unless="jetty.present"/>
         <classpath refid="classpath"/>
      </javac>

      <jar jarfile="${tests.jar.file}" manifest="${etc.dir}/MANIFEST.MF">
         <fileset dir="${test.classes.dir}">
            <patternset refid="tests.classes"/>
         </fileset>
         <fileset dir="${test.src.dir}">
            <include name="test/mx4j/tools/i18n/*.properties"/>
         </fileset>
      </jar>
   </target>

   <target name="compile.examples" description="Compiles and jars the MX4J examples" depends="compile.tools">
      <mkdir dir="${examples.classes.dir}"/>

      <javac srcdir="${examples.src.dir}" destdir="${examples.classes.dir}" debug="on" deprecation="on" encoding="US-ASCII">
         <classpath refid="classpath"/>
         <exclude name="mx4j/examples/tools/xdoclet/**"/>
         <exclude name="mx4j/examples/remote/rmi/ssl/**" unless="jdk14.present"/>
      </javac>

      <rmic base="${examples.classes.dir}"
         classname="mx4j.examples.mbeans.rmi.MyRemoteServiceObject"
         classpathref="classpath"
         debug="true"
         />
      <rmic base="${examples.classes.dir}"
         classname="mx4j.examples.mbeans.iiop.HelloImpl"
         classpathref="classpath"
         debug="true"
         iiop="yes"
         />
      <mkdir dir="${dist.examples.dir}"/>

      <jar jarfile="${examples.jar.file}" manifest="${etc.dir}/MANIFEST.MF">
         <fileset dir="${examples.classes.dir}"/>
         <fileset dir="${etc.dir}">
            <include name="jndi.properties"/>
         </fileset>
         <fileset dir="${examples.src.dir}">
            <include name="mx4j/examples/tools/xdoclet/mbeans.mlet"/>
         </fileset>
         <fileset dir="${examples.src.dir}">
            <include name="mx4j/examples/services/loading/mbeans.mlet"/>
         </fileset>
         <fileset dir="${examples.src.dir}">
            <include name="mx4j/examples/remote/security/server.policy"/>
         </fileset>
      </jar>
   </target>

   <target name="javadocs" description="Creates the MX4J javadoc documentation" depends="compile.tools">
      <mkdir dir="${dist.docs.api.dir}"/>
      <javadoc destdir="${dist.docs.api.dir}"
         author="true"
         version="true"
         use="true"
         windowtitle="MX4J API"
         classpathref="classpath">
         <package name="mx4j.*"/>

         <bottom><![CDATA[<center><small>Copyright &#169; 2001-2005 The MX4J Contributors. All Rights Reserved.</small></center>]]></bottom>
         <group title="MX4J classes" packages="mx4j:mx4j.*"/>
         <sourcepath>
            <pathelement path="${core.src.dir}"/>
            <pathelement path="${tools.src.dir}"/>
         </sourcepath>
      </javadoc>
   </target>

   <target name="docs" description="Builds the MX4J documentation">
      <unzip src="${docbook.dtd.zip.file}" dest="${docs.src.dir}/docbook"/>
      <unzip src="${docbook.xsl.zip.file}" dest="${docs.src.dir}/docbookx"/>
      <mkdir dir="${dist.docs.dir}"/>

      <style processor="trax"
         basedir="${docs.src.dir}"
         destdir="${dist.docs.dir}"
         force="yes"
         style="${docs.src.dir}/xsl/mx4j-chunk.xsl"
         includes="${root.document.name}"
         classpathref="lib.classpath"
         />

      <delete dir="${docs.src.dir}/docbook" quiet="true"/>
      <delete dir="${docs.src.dir}/docbookx" quiet="true"/>

      <!-- Bug in Ant forces this move, since destdir of the style task does not work -->
      <move todir="${dist.docs.dir}">
         <fileset dir="${basedir}/build">
            <include name="*.html"/>
         </fileset>
      </move>

      <copy todir="${dist.docs.dir}">
         <fileset dir="${docs.src.dir}">
            <include name="*.css"/>
         </fileset>
      </copy>

      <mkdir dir="${dist.docs.dir}/images"/>
      <copy todir="${dist.docs.dir}/images">
         <fileset dir="${docs.src.dir}/images">
            <include name="*.png"/>
            <include name="*.gif"/>
            <include name="*.jpg"/>
         </fileset>
      </copy>
   </target>

   <target name="main" depends="tests, compile.examples"/>

   <target name="release" description="Builds a release of the MX4J project" depends="clean, manifest, releasing, main, docs, javadocs">
      <mkdir dir="${release.dist.dir}"/>
      <mkdir dir="${binary.release.dist.dir}"/>
      <mkdir dir="${source.release.dist.dir}"/>

      <!-- Miscellaneous files -->
      <copy todir="${binary.release.dist.dir}">
         <fileset dir="${etc.dir}" includes="*-LICENSE.txt"/>
         <fileset dir="${etc.dir}">
            <include name="BUILD-HOWTO.txt"/>
            <include name="LICENSE.txt"/>
            <include name="README.txt"/>
            <include name="RELEASE-NOTES-${release}.txt"/>
         </fileset>
      </copy>
      <copy todir="${source.release.dist.dir}">
         <fileset dir="${etc.dir}" includes="*-LICENSE.txt"/>
         <fileset dir="${etc.dir}">
            <include name="BUILD-HOWTO.txt"/>
            <include name="LICENSE.txt"/>
            <include name="README.txt"/>
            <include name="RELEASE-NOTES-${release}.txt"/>
         </fileset>
      </copy>

      <!-- The core JMX implementation and examples jars -->
      <copy file="${jmx.jar.file}" todir="${binary.release.dist.dir}/lib"/>
      <copy file="${impl.jar.file}" todir="${binary.release.dist.dir}/lib"/>
      <copy file="${mx4j.jar.file}" todir="${binary.release.dist.dir}/lib"/>
      <copy file="${rjmx.jar.file}" todir="${binary.release.dist.dir}/lib"/>
      <copy file="${rimpl.jar.file}" todir="${binary.release.dist.dir}/lib"/>
      <copy file="${rmx4j.jar.file}" todir="${binary.release.dist.dir}/lib"/>
      <copy file="${tools.jar.file}" todir="${binary.release.dist.dir}/lib"/>
      <copy file="${mx4j.soap.war.file}" todir="${binary.release.dist.dir}/lib"/>
      <copy file="${examples.jar.file}" todir="${binary.release.dist.dir}/lib"/>

      <!-- The examples source files -->
      <copy todir="${binary.release.dist.dir}/examples">
         <fileset dir="${examples.src.dir}"/>
      </copy>
      <copy todir="${binary.release.dist.dir}/examples">
         <fileset dir="${etc.dir}" includes="jndi.properties"/>
         <fileset dir="${etc.dir}" includes="key.store"/>
         <fileset dir="${etc.dir}" includes="trust.store"/>
      </copy>

      <!-- The documentation -->
      <copy todir="${binary.release.dist.dir}/docs">
         <fileset dir="${dist.docs.dir}"/>
      </copy>

      <!-- Generate the packed binary files -->
      <zip zipfile="${dist.dir}/${name}-${release}.zip">
         <zipfileset dir="${binary.release.dist.dir}" prefix="${name}-${release}"/>
      </zip>
      <tar tarfile="${dist.dir}/${name}-${release}.tar">
         <tarfileset dir="${binary.release.dist.dir}" prefix="${name}-${release}"/>
      </tar>
      <gzip zipfile="${dist.dir}/${name}-${release}.tar.gz" src="${dist.dir}/${name}-${release}.tar"/>
      <delete file="${dist.dir}/${name}-${release}.tar" quiet="true"/>

      <!-- The mx4j source files -->
      <copy todir="${source.release.dist.dir}/src">
         <fileset dir="${src.dir}">
            <exclude name="CVS"/>
         </fileset>
      </copy>
      <!-- The build file -->
      <copy todir="${source.release.dist.dir}/build" file="${basedir}/build/build.xml"/>
      <!-- The lib directory -->
      <mkdir dir="${source.release.dist.dir}/lib"/>

      <!-- Generate the packed source files -->
      <zip zipfile="${dist.dir}/${name}-${release}-src.zip">
         <zipfileset dir="${source.release.dist.dir}" prefix="${name}-${release}"/>
      </zip>
      <tar tarfile="${dist.dir}/${name}-${release}-src.tar">
         <tarfileset dir="${source.release.dist.dir}" prefix="${name}-${release}"/>
      </tar>
      <gzip zipfile="${dist.dir}/${name}-${release}-src.tar.gz" src="${dist.dir}/${name}-${release}-src.tar"/>
      <delete file="${dist.dir}/${name}-${release}-src.tar" quiet="true"/>

      <delete dir="${release.dist.dir}" quiet="true"/>

   </target>

   <target name="tests" description="Prepares the environment for the tests" depends="flags, compile.tests">
      <mkdir dir="${dist.test.dir}"/>

      <copy todir="${dist.test.dir}">
         <fileset dir="${lib.dir}">
            <include name="junit.jar"/>
            <include name="xmlunit.jar"/>
            <include name="xml-apis.jar"/>
            <include name="xercesImpl.jar"/>
            <include name="xalan.jar"/>
            <include name="commons-logging.jar"/>
            <include name="log4j.jar"/>
            <include name="bcel.jar"/>
            <include name="axis.jar"/>
            <include name="jaxrpc.jar"/>
            <include name="saaj.jar"/>
            <include name="wsdl4j.jar"/>
            <include name="commons-discovery.jar"/>
            <include name="org.mortbay.jetty.jar"/>
            <include name="hessian-3.0.8.jar"/>
            <!-- Also jars downloaded apart -->
            <include name="servlet.jar"/>
            <include name="jython.jar"/>
            <include name="jsse.jar"/>
            <include name="jcert.jar"/>
            <include name="jnet.jar"/>
            <include name="jaas.jar"/>
            <include name="jmxri.jar"/>
            <include name="jmxremote.jar"/>
            <include name="jmxremote_optional.jar"/>
         </fileset>
         <fileset dir="${dist.lib.dir}">
            <include name="*.jar"/>
            <include name="*.war"/>
            <exclude name="${name}.jar"/>
            <exclude name="${name}-remote.jar"/>
         </fileset>
         <fileset dir="${etc.dir}">
            <include name="log4j.xml"/>
            <include name="key.store"/>
            <include name="trust.store"/>
         </fileset>
      </copy>

   </target>

   <target name="single-test" description="Executes the test class defined by the system property 'testname'" depends="tests">
      <junit printsummary="withOutAndErr" fork="yes" dir="${basedir}" showoutput="yes">
         <!--sysproperty key="mx4j.log.priority" value="debug"/-->
         <!--sysproperty key="java.security.debug" value="access.failure"/-->
         <formatter type="plain" usefile="no"/>
         <test name="${testname}" if="testname" fork="yes"/>
         <classpath>
            <pathelement location="${dist.test.dir}"/>
            <fileset dir="${dist.test.dir}">
               <include name="*.jar"/>
               <include name="*.war"/>
               <exclude name="jmxri.jar"/>
               <exclude name="jmxremote.jar"/>
               <exclude name="jmxremote_optional.jar"/>
            </fileset>
         </classpath>
      </junit>
   </target>

   <target name="tests-report" description="Executes the tests and generates the reports" depends="tests">
      <mkdir dir="${test.xml.dir}"/>
      <mkdir dir="${test.html.dir}"/>

      <tstamp>
         <format property="today.now" pattern="EEEE d MMMM yyyy HH:mm zzzz" locale="en"/>
      </tstamp>

      <junit printsummary="withOutAndErr" fork="yes" timeout="300000" dir="${basedir}" showoutput="yes">
         <sysproperty key="mx4j.log.priority" value="warn"/>
         <!-- sysproperty key="java.security.debug" value="access.failure"/-->
         <formatter type="xml"/>
         <batchtest fork="yes" todir="${test.xml.dir}">
            <fileset dir="${test.src.dir}">
               <include name="test/**/*Test.java"/>
               <exclude name="test/javax/management/remote/**" unless="jaas.present"/>
               <exclude name="test/mx4j/remote/**" unless="jaas.present"/>
               <exclude name="test/mx4j/tools/remote/**" unless="jaas.present"/>
               <exclude name="test/mx4j/tools/jython/**" unless="jython.present"/>
               <exclude name="test/**/*SecurityManager*" unless="jdk14.present"/>
               <exclude name="test/mx4j/tools/remote/soap/**" unless="jetty.present"/>
               <exclude name="test/mx4j/tools/remote/burlap/**" unless="jdk14.present"/>
               <exclude name="test/mx4j/tools/remote/hessian/**" unless="jdk14.present"/>
            </fileset>
         </batchtest>
         <classpath>
            <pathelement location="${dist.test.dir}"/>
            <fileset dir="${dist.test.dir}">
               <include name="*.jar"/>
               <exclude name="jmxri.jar"/>
               <exclude name="jmxremote.jar"/>
               <exclude name="jmxremote_optional.jar"/>
            </fileset>
         </classpath>
      </junit>

      <antcall target="tests-transform"/>
   </target>

   <target name="tests-transform">
      <junitreport todir="${test.xml.dir}">
         <fileset dir="${test.xml.dir}">
            <include name="TEST-*.xml"/>
         </fileset>
         <report format="frames" styledir="${etc.dir}" todir="${test.html.dir}"/>
      </junitreport>
   </target>

   <target name="tests-core" description="Executes the core tests" depends="tests">
      <mkdir dir="${test.xml.dir}"/>
      <mkdir dir="${test.html.dir}"/>

      <tstamp>
         <format property="today.now" pattern="EEEE d MMMM yyyy HH:mm zzzz" locale="en"/>
      </tstamp>

      <junit printsummary="withOutAndErr" fork="yes" timeout="300000" dir="${basedir}" showoutput="yes">
         <sysproperty key="mx4j.log.priority" value="warn"/>
         <!-- sysproperty key="java.security.debug" value="access.failure"/-->
         <formatter type="xml"/>
         <batchtest fork="yes" todir="${test.xml.dir}">
            <fileset dir="${test.src.dir}">
               <include name="test/javax/**/*Test.java"/>
               <include name="test/mx4j/**/*Test.java"/>
               <exclude name="test/javax/management/remote/**"/>
               <exclude name="test/mx4j/remote/**"/>
               <exclude name="test/mx4j/tools/**"/>
            </fileset>
         </batchtest>
         <classpath>
            <pathelement location="${dist.test.dir}"/>
            <fileset dir="${dist.test.dir}">
               <include name="*.jar"/>
               <exclude name="jmxri.jar"/>
               <exclude name="jmxremote.jar"/>
               <exclude name="jmxremote_optional.jar"/>
            </fileset>
         </classpath>
      </junit>

      <antcall target="tests-transform"/>
   </target>

   <target name="clean" description="Cleans the build environment">
      <delete dir="${classes.dir}" quiet="true"/>
      <delete dir="${dist.dir}" quiet="true"/>
   </target>

</project>
